{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src sync \\.test\\.ts$","webpack:///./src/Application/Application.test.ts","webpack:///./src/Application/Application.ts","webpack:///./src/Utils/Utils.test.ts","webpack:///./src/Utils/Utils.ts","webpack:///./src/templates/config/ConfigTemplates.ts","webpack:///./src/templates/typescript/LitElementTemplate.ts","webpack:///./src/templates/typescript/MochaTestCaseTemplate.ts","webpack:///./test/tests.js","webpack:///external \"assert\"","webpack:///external \"fs\"","webpack:///external \"https\"","webpack:///external \"path\""],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yD;;;;;;;;;;;;ACvBa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,SAAS;AACT,kCAAkC;AAClC;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,uDAAe;AAC7C,iCAAiC,mBAAO,CAAC,sBAAQ;AACjD,6BAA6B,mBAAO,CAAC,cAAI;AACzC,+BAA+B,mBAAO,CAAC,kBAAM;AAC7C;AACA;AACA,YAAY,iDAAiD;;AAE7D;AACA;AACA;;AAEA,mBAAmB,eAAe;AAClC;AACA,S;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,UAAU;AACjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,YAAY;AACtC,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,0IAA0I,EAAE;AAC5I,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;;;AChGY;AACb;AACA;AACA,kCAAkC,oCAAoC,aAAa,EAAE,EAAE;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,yCAAyC,6BAA6B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D;AACA,0BAA0B,mBAAO,CAAC,kBAAM;AACxC,wBAAwB,mBAAO,CAAC,cAAI;AACpC,6CAA6C,mBAAO,CAAC,oGAA4C;AACjG,gDAAgD,mBAAO,CAAC,0GAA+C;AACvG,gCAAgC,mBAAO,CAAC,4CAAgB;AACxD,0CAA0C,mBAAO,CAAC,sFAAqC;AACvF,gCAAgC,mBAAO,CAAC,oBAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,KAAK;AAC3D;AACA,uCAAuC,kBAAkB;AACzD,mDAAmD,UAAU,GAAG,KAAK;AACrE,uCAAuC,UAAU,GAAG,KAAK;AACzD,uCAAuC,UAAU,GAAG,KAAK;AACzD;AACA,uCAAuC,UAAU,GAAG,KAAK;AACzD,qDAAqD,KAAK;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,4BAA4B,kBAAkB;AAC9C;AACA;AACA,4BAA4B,KAAK;AACjC;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;AACA,+BAA+B,0BAA0B;AACzD;AACA;AACA,0CAA0C,cAAc;AACxD,qCAAqC,kBAAkB;AACvD,2CAA2C,cAAc,GAAG,YAAY;AACxE,4BAA4B,cAAc,GAAG,YAAY;AACzD,wCAAwC,cAAc,GAAG,YAAY;AACrE,4BAA4B,cAAc,GAAG,YAAY;AACzD;AACA;AACA;AACA,6DAA6D,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,oBAAoB;AACrG;AACA;AACA;AACA;AACA;AACA,uFAAuF,oBAAoB;AAC3G;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnHa;AACb;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,gCAAgC,mBAAO,CAAC,qCAAS;AACjD,iCAAiC,mBAAO,CAAC,sBAAQ;AACjD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC;;;;;;;;;;;;;AChCY;AACb,8CAA8C,cAAc;AAC5D;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,SAAS;AACT;AACA;AACA;AACA;AACA,uBAAuB,uBAAuB;AAC9C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC3Ba;AACb,8CAA8C,cAAc;AAC5D;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;;AAEA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;;AAEA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB,yB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ma;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,oBAAoB,iDAAiD;;AAErE;AACA;AACA;;AAEA,2BAA2B,eAAe;AAC1C;AACA,iB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,UAAU;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,YAAY;AAC9C,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtDa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;;;;;;;;;;;;ACpCA,YAAY,yDAA8C;AAC1D;AACA,uB;;;;;;;;;;;ACFA,mC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,iC","file":"tests.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./test/tests.js\");\n","var map = {\n\t\"./Application/Application.test.ts\": \"./src/Application/Application.test.ts\",\n\t\"./Utils/Utils.test.ts\": \"./src/Utils/Utils.test.ts\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src sync recursive \\\\.test\\\\.ts$\";","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try {\n            step(generator.next(value));\n        }\n        catch (e) {\n            reject(e);\n        } }\n        function rejected(value) { try {\n            step(generator[\"throw\"](value));\n        }\n        catch (e) {\n            reject(e);\n        } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Application_1 = require(\"./Application\");\nconst assert_1 = __importDefault(require(\"assert\"));\nconst fs_1 = __importDefault(require(\"fs\"));\nconst path_1 = __importDefault(require(\"path\"));\nlet application;\nlet foobarClassTemplate = `\n    import { LitElement, html, css, property, customElement } from 'lit-element';\n\n    @customElement('foobar-element')\n    export class FoobarElement extends LitElement {\n        private _name: string;\n\n        @property({ type: String }) public get name() {\n            return this._name;\n        } \n        public set name(value: string) {\n            const oldValue = this.name;\n            this._name = value;\n            this.requestUpdate('name', oldValue)\n        }\n        \n        constructor() {\n            super();\n            this.name = \"FoobarElement\";\n        }\n\n        render() {\n            return html\\`\n                <h1>\\${this.name} <span class=\".blink\">Works!</span></h1>\n            \\`;\n        }\n        \n        static get styles() {\n            const style = css\\`\n                :host {\n                    color: red;\n                    // create a blink css property\n                }\n                @keyframes blink {\n                    from { color: red; }\n                    to { color: white; }\n                }\n                .blink {\n                    animation-name: blink;\n                    animation-duration: 2s;\n                }\n            \\`;\n            return [style];\n        }\n    }\n`;\ndescribe(\"Test Case for the Application Class\", () => {\n    beforeEach(() => {\n        application = new Application_1.Application(\"Application\");\n    });\n    afterEach(() => {\n        application = null;\n    });\n    it(\"should return a new Template from a preset in-class template called 'foobar'\", () => {\n        assert_1.default.deepStrictEqual(Application_1.Application.generateNewComponent('foobar'), foobarClassTemplate.replace(/^(?:    ){3}/gm, ''));\n    });\n    it(\"should create a folder with a new component named 'baz' in current working directory if path not supplied\", () => {\n        Application_1.Application.createNewComponent('baz');\n        console.log(__dirname);\n        console.log(process.cwd());\n        const folderIsCreated = fs_1.default.existsSync(path_1.default.resolve(process.cwd(), 'baz'));\n        assert_1.default.strictEqual(folderIsCreated, true);\n    });\n    it('should fetch the template repo from upstream', () => __awaiter(void 0, void 0, void 0, function* () {\n        const repo = yield Application_1.Application.fetchTemplateProjectFromRepo();\n        assert_1.default.notStrictEqual(repo, null);\n    }));\n});\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Application = void 0;\nconst path = __importStar(require(\"path\"));\nconst fs = __importStar(require(\"fs\"));\nconst LitElementTemplate_1 = __importDefault(require(\"../templates/typescript/LitElementTemplate\"));\nconst MochaTestCaseTemplate_1 = __importDefault(require(\"../templates/typescript/MochaTestCaseTemplate\"));\nconst Utils_2 = __importDefault(require(\"../Utils/Utils\"));\nconst ConfigTemplates_1 = __importDefault(require(\"../templates/config/ConfigTemplates\"));\nconst https_1 = __importDefault(require(\"https\"));\nclass Application {\n    constructor(name) {\n        this._name = name;\n    }\n    static createNewApplication(name) {\n        const templateName = 'my-element';\n        console.log(__dirname);\n        const pathToComponent = path.resolve('./', `${name}`, `src/`);\n        console.log(pathToComponent);\n        fs.mkdirSync(pathToComponent, { recursive: true });\n        console.log(`Creating App Folder on Path ${__dirname}/${name}`);\n        console.log(`Creating Folder ${__dirname}/${name}/src`);\n        console.log(`Creating Folder ${__dirname}/${name}/src/my-element`);\n        this.createNewComponent(templateName, pathToComponent);\n        console.log(`Creating Folder ${__dirname}/${name}/test`);\n        const testFolderPath = path.resolve('./', `${name}`, `test/`);\n        this.createConfigurationFiles(testFolderPath);\n    }\n    static fetchTemplateProjectFromRepo() {\n        https_1.default.get('https://github.com/FreeBLD/lit-element-template/archive/typescript.zip', (res) => {\n            console.log(res);\n            const repo = res.on('data', (payload) => {\n                console.log(payload);\n                return payload;\n            });\n        });\n    }\n    static createConfigurationFiles(path) {\n        fs.mkdirSync(path, { recursive: true });\n        const config = new ConfigTemplates_1.default();\n        let bundler = config.getDefaultWebpackTemplate();\n        fs.writeFileSync(`${path}/webpack.config.js`, bundler);\n        let compiler = config.getDefaultWebpackTemplate();\n        fs.writeFileSync(`${path}/tsconfig.json`, compiler);\n    }\n    static createNewComponent(name, pathToComponent) {\n        let trimmedName = Utils_2.default.trimComponentName(name);\n        const newFileName = `${trimmedName.toLowerCase()}-element`;\n        pathToComponent = !!pathToComponent ? pathToComponent : process.cwd();\n        const newFolderName = path.resolve(pathToComponent, newFileName);\n        console.log(`Created New Folder ${newFolderName}`);\n        fs.mkdirSync(newFolderName, { recursive: true });\n        console.log(`Created New Element ${newFolderName}/${newFileName}.ts`);\n        fs.writeFileSync(`${newFolderName}/${newFileName}.ts`, this.generateNewComponent(trimmedName));\n        console.log(`Created New Test ${newFolderName}/${newFileName}.ts`);\n        fs.writeFileSync(`${newFolderName}/${newFileName}.test.ts`, this.generateNewTestCase(trimmedName));\n    }\n    static generateNewComponent(name) {\n        let elementTemplate = new LitElementTemplate_1.default().renderTypescriptTemplate();\n        elementTemplate = elementTemplate.replace(/^(?:    ){3}/gm, '');\n        elementTemplate = elementTemplate.replace(/\\n/, '');\n        const pascalCase = Utils_2.default.firstToUpperCase(name);\n        const camelCase = Utils_2.default.firstToLowerCase(name);\n        const kebapCase = Utils_2.default.convertToKebapCase(name);\n        let litElementComponent = elementTemplate.replace(/%%PascalCase%%/g, pascalCase);\n        litElementComponent = litElementComponent.replace(/%%camelCase%%/g, camelCase);\n        litElementComponent = litElementComponent.replace(/\\\\/g, '');\n        return litElementComponent.replace(/%%kebap-case%%/g, kebapCase);\n    }\n    static generateNewTestCase(name) {\n        const pascalCase = Utils_2.default.firstToUpperCase(name);\n        const camelCase = Utils_2.default.firstToLowerCase(name);\n        const kebapCase = Utils_2.default.convertToKebapCase(name);\n        let testCaseTemplate = new MochaTestCaseTemplate_1.default().renderTestCaseTemplate();\n        testCaseTemplate = testCaseTemplate.replace(/^(?:    ){3}/gm, '');\n        testCaseTemplate = testCaseTemplate.replace(/\\n/, '');\n        testCaseTemplate = testCaseTemplate.replace(/%%PascalCase%%/g, pascalCase);\n        testCaseTemplate = testCaseTemplate.replace(/%%camelCase%%/g, camelCase);\n        return testCaseTemplate.replace(/%%kebap-case%%/g, kebapCase);\n    }\n    static generateNewTestCaseFromTemplate(name, templateURL) {\n        let pascalCase = Utils_2.default.firstToUpperCase(name);\n        const testTemplate = fs.readFileSync(path.join(__dirname, templateURL), { encoding: \"utf-8\" });\n        const testBuffer = testTemplate.replace(/%%PascalCase%%/g, pascalCase);\n        return testBuffer.replace(/%%kebap-case%%/g, name.toLowerCase());\n    }\n    static generateNewComponentFromTemplate(name, templateURL) {\n        let pascalCase = Utils_2.default.firstToUpperCase(name);\n        const litElementTemplate = fs.readFileSync(path.join(__dirname, templateURL), { encoding: \"utf-8\" });\n        const litElementComponent = litElementTemplate.replace(/%%PascalCase%%/g, pascalCase);\n        return litElementComponent.replace(/%%kebap-case%%/g, name.toLowerCase());\n    }\n}\nexports.Application = Application;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Utils_1 = __importDefault(require(\"./Utils\"));\nconst assert_2 = __importDefault(require(\"assert\"));\ndescribe('Test Case for the Utils Class', () => {\n    it(\"firstToLowerCase() should return first 'Test' as 'test'\", () => {\n        assert_2.default.strictEqual(Utils_1.default.firstToLowerCase(\"Test\"), 'test');\n    });\n    it(\"firstToUppercase() should return first letter in 'test as 'Test'\", () => {\n        assert_2.default.strictEqual(Utils_1.default.firstToUpperCase('test'), 'Test');\n    });\n    it(\"trimComponentName() should strip any string containing 'component' token\", () => {\n        assert_2.default.strictEqual(Utils_1.default.trimComponentName(\"UtilsComponent\"), \"Utils\");\n    });\n    it(\"trimComponentName() should strip any string containing 'element' token\", () => {\n        assert_2.default.strictEqual(Utils_1.default.trimComponentName(\"UtilsElement\"), \"Utils\");\n    });\n    it(\"trimComponentName() should strip any string containing any number of 'element' token\", () => {\n        assert_2.default.strictEqual(Utils_1.default.trimComponentName(\"UtilsElementElement\"), \"Utils\");\n    });\n    it(\"convertToKebapCase() should return a 'PascalCase' string with a hyphen token\", () => {\n        assert_2.default.strictEqual(Utils_1.default.convertToKebapCase('PascalCase'), 'pascal-case');\n    });\n    it(\"convertToKebapCase() should return a 'camelCase' string with a hyphen token\", () => {\n        assert_2.default.strictEqual(Utils_1.default.convertToKebapCase('camelCase'), 'camel-case');\n    });\n    it(\"convertToSnakeCase() should return a 'camelCase' string with and an underscore separator token\", () => {\n        assert_2.default.strictEqual(Utils_1.default.convertToSnakeCase('camelCase'), 'camel_case');\n    });\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Utils {\n    constructor() { }\n    static firstToUpperCase(stringToConvert) {\n        return stringToConvert[0].toUpperCase() + stringToConvert.substring(1, stringToConvert.length);\n    }\n    static firstToLowerCase(stringToConvert) {\n        return stringToConvert[0].toLowerCase() + stringToConvert.substring(1, stringToConvert.length);\n    }\n    static convertToKebapCase(stringToConvert) {\n        const result = stringToConvert.replace(/[A-Za-z][a-z]+/g, (fragment) => {\n            return `-${fragment.toLowerCase()}`;\n        });\n        return result.slice(1, result.length);\n    }\n    static convertToSnakeCase(stringToConvert) {\n        const result = stringToConvert.replace(/[A-Za-z][a-z]+/g, (fragment) => {\n            return `_${fragment.toLowerCase()}`;\n        });\n        return result.slice(1, result.length);\n    }\n    static trimComponentName(componentName) {\n        let regex = new RegExp('Component|Element|-element|-component|-', 'g');\n        return componentName.replace(regex, \"\");\n    }\n}\nexports.default = Utils;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ConfigFilesTemplates {\n    constructor() { }\n    getDefaultTsConfigTemplate() {\n        return `\n            {\n                \"compilerOptions\": {\n                    \"outDir\": \"./dist/\",\n                    \"sourceMap\": true,\n                    \"noImplicitAny\": true,\n                    \"module\": \"CommonJS\",\n                    \"target\": \"ES2015\",\n                    \"allowJs\": true,\n                    \"experimentalDecorators\": true,\n                    \"moduleResolution\": \"Node\"\n                }\n            }\n        `;\n    }\n    getDefaultWebpackTemplate() {\n        return `\n            const HtmlWebpackPlugin = require('html-webpack-plugin');\n            const CopyWebpackPlugin = require('copy-webpack-plugin');\n            const { CleanWebpackPlugin } = require('clean-webpack-plugin');\n            const path = require('path');\n            \n            module.exports = ({ mode }) => {\n                return {\n                    mode,\n                    entry: path.join(__dirname, 'src', 'index.ts'),\n                    output:  {\n                        path: path.join(__dirname, \"/dist\"),\n                        filename: \"bundle.js\"\n                    }, \n                    plugins: [\n                        new CleanWebpackPlugin(),\n                        new HtmlWebpackPlugin({\n                            entry: 'index.ts',\n                            template: path.resolve(__dirname, 'src/', 'index.html')\n                        }),\n                        new CopyWebpackPlugin({\n                            patterns: [\n                                {\n                                    context: 'node_modules/@webcomponents/webcomponentsjs',\n                                    from: '**/*.js',\n                                    to: 'webcomponents'\n                                }\n                            ]\n                        })\n                    ],\n                    module: {\n                    rules: [\n                        {\n                            test: /\\.ts$/,\n                            use: 'ts-loader',\n                            exclude: /node_modules/\n                        },\n                        {\n                            test: /\\.test\\.js$/,\n                            use: 'mocha-loader',\n                            exclude: /node_modules/\n                        },\n                        {\n                            test: /\\.test\\.ts$/,\n                            use: 'mocha-loader',\n                            exclude: /node_modules/\n                        },\n                        { \n                            enforce: 'pre',\n                            test: /\\.js$/,\n                            loader: 'source-map-loader'\n                        }\n                        ]\n                    },\n                    resolve: {\n                        extensions: ['.ts', '.js']\n                    },\n                    devtool: mode === 'development' ? 'source-map' : 'none',\n                    watchOptions: {\n                        ignored: /node_modules/\n                    },\n                    devServer: {\n                        contentBase: path.join(__dirname, '/dist'),\n                        compress: true,\n                        port: 9000,\n                        inline: true,\n                        hot: true //If this is false then liveReload implicitly true\n                    }\n                };\n            };\n        `;\n    }\n    getDefaultUnitTestingBuffersTemplate() {\n        return [\n            `\n            var context = require.context('../src', true, /\\.test\\.ts$/);\n            context.keys().forEach(context);\n            module.exports = context;\n            `,\n            `\n            const HtmlWebpackPlugin = require('html-webpack-plugin');\n            const { CleanWebpackPlugin } = require('clean-webpack-plugin');\n            const path = require('path');\n            \n            module.exports = ({ mode }) => {\n                return {\n                    mode,\n                    entry: path.resolve(__dirname, '.', 'all.tests.js'),\n                    output: {\n                        path: path.join(__dirname, '/build'),\n                        filename: '[name].bundle.js',\n                    },\n                    plugins: [\n                        new CleanWebpackPlugin(),\n                        new HtmlWebpackPlugin({\n                            template: path.resolve(__dirname, '.', 'test.html')\n                        })\n                    ],\n                    module: {\n                    rules: [\n                        {\n                            test: /\\.ts$/,\n                            use: 'ts-loader',\n                            exclude: /node_modules/\n                        },\n                        {\n                            test: /\\.test\\.js$/,\n                            use: 'mocha-loader',\n                            exclude: /node_modules/\n                        },\n                        {\n                            test: /\\.test\\.ts$/,\n                            use: [ 'mocha-loader', 'ts-loader' ],\n                            exclude: /node_modules/\n                        },\n                        { \n                            enforce: 'pre',\n                            test: /\\.js$/,\n                            loader: 'source-map-loader'\n                        }\n                        ]\n                    },\n                    resolve: {\n                        extensions: ['.ts', '.js']\n                    },\n                    devtool: mode === 'development' ? 'source-map' : 'none',\n                    watchOptions: {\n                        ignored: /node_modules/\n                    },\n                    devServer: {\n                        contentBase: path.join(__dirname, '/build'),\n                        compress: true,\n                        port: 9010,\n                        inline: true,\n                        //hot: true //If this is false then liveReload implicitly true\n                    },\n                    optimization: {\n                        minimize: mode === 'production' ? true : false,\n                    }\n                };\n            };\n            `,\n            `\n            <!DOCTYPE html>\n\n            <html lang=\"en\">\n             \n            <head>\n                <meta charset=\"UTF-8\">\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n                <title>Mocha Testing</title>\n            </head>\n             \n            <body>\n            </body>\n            </html>\n            `,\n            `\n            var webpackConf = require('./webpack-test.config');\n\n            module.exports = function (config) {\n                return config.set({\n                    browsers: ['Chrome'],\n                    frameworks: ['mocha'],\n                    files: ['./index.ts'],\n                    preprocessors: {\n                        './index.ts': ['webpack']\n                    },\n                    plugins: [\n                        'karma-chrome-launcher',\n                        'karma-mocha',\n                        'karma-webpack'\n                    ],\n                    webpack: webpackConf,\n                    webpackMiddleware: {\n                        noInfo: true\n                    }\n                })\n            }\n            `\n        ];\n    }\n}\nexports.default = ConfigFilesTemplates;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass LitElementTemplate {\n    constructor() {\n    }\n    renderTypescriptTemplate() {\n        return `\n            import { LitElement, html, css, property, customElement } from 'lit-element';\n\n            @customElement('%%kebap-case%%-element')\n            export class %%PascalCase%%Element extends LitElement {\n                private _name: string;\n\n                @property({ type: String }) public get name() {\n                    return this._name;\n                } \n                public set name(value: string) {\n                    const oldValue = this.name;\n                    this._name = value;\n                    this.requestUpdate('name', oldValue)\n                }\n                \n                constructor() {\n                    super();\n                    this.name = \"%%PascalCase%%Element\";\n                }\n\n                render() {\n                    return html\\`\n                        <h1>\\${this.name} <span class=\".blink\">Works!</span></h1>\n                    \\`;\n                }\n                \n                static get styles() {\n                    const style = css\\`\n                        :host {\n                            color: red;\n                            // create a blink css property\n                        }\n                        @keyframes blink {\n                            from { color: red; }\n                            to { color: white; }\n                        }\n                        .blink {\n                            animation-name: blink;\n                            animation-duration: 2s;\n                        }\n                    \\`;\n                    return [style];\n                }\n            }\n        `;\n    }\n}\nexports.default = LitElementTemplate;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass MochaTestCaseTemplate {\n    renderTestCaseTemplate() {\n        return `\n            import  { %%PascalCase%%Element } from \"./%%kebap-case%%-element\";\n            import * as assert from 'assert';\n\n            let %%camelCase%%: %%PascalCase%%Element;\n            let shadow: shadowRoot;\n\n            describe(\"Test Case for the %%PascalCase%%Element Class\", () => {\n                beforeEach(() => {\n                    %%camelCase%% = new %%PascalCase%%Element();\n                    document.body.appendChild(%%camelCase%%);\n                    shadow = %%camelCase%%.shadowRoot;\n                });\n\n                afterEach(() => {\n                    document.body.removeChild(%%camelCase%%);\n                    %%camelCase%% = null;\n                });\n\n                it(\"%%camelCase%% has a property 'name' with value of '%%PascalCase%%'\", function() {\n                    assert.equal(%%camelCase%%.name, '%%PascalCase%%');\n                });\n\n                it(\"%%camelCase%% has a 'color' red applied to its children\", function() {\n                    const host = window.getComputedStyle(%%camelCase%%, ':host');\n                    const color = host.getPropertyValue('color');\n                    assert.equal(%%camelCase%%, color);\n                });\n            })\n        `;\n    }\n}\nexports.default = MochaTestCaseTemplate;\n","let tests = require.context('../src', true, /\\.test\\.ts$/);\ntests.keys().forEach(tests);\nmodule.exports = tests;","module.exports = require(\"assert\");","module.exports = require(\"fs\");","module.exports = require(\"https\");","module.exports = require(\"path\");"],"sourceRoot":""}